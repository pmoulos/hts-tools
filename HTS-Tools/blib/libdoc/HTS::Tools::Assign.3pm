.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.29)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "HTS::Tools::Assign 3"
.TH HTS::Tools::Assign 3 "2016-09-30" "perl v5.22.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
HTS::Tools::Assign \- Genomic region distance\-based assignment, with optional 
statistical significance.
.SH "VERSION"
.IX Header "VERSION"
Version 0.01
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
This module assigns one or more sets of genomic regions (queries) to another set
of genomic regions (subject) using the distance from a fixed point in the 
queries to another fixed point in the subject regions. One example of the above 
is the assignment of a set of ChIP-Seq peaks to a set of regulated genes based 
on the gene-peak distances between the genes of the regulated set. The peak mode
(or summit) can be used as the queries fixed point, while the gene \s-1TSS\s0 can be 
used as the fixed point of the subject geneomic regions. The module may 
optionally assign a p\-value to each query, using a total genomic background 
subject (e.g. the whole genome annotation instead of a set of differentially 
expressed genes) based on an experimental procedure described below. This 
procedure has been used in Rao et al., 2011 
(http://www.ncbi.nlm.nih.gov/pubmed/18981474) and is highly experimental. It is 
optional and you may use it at own risk. In order to find peaks associatevely 
enriched in a set of the regulated genes as compared to a background set, the 
module uses the hypergeometric test on the population of peaks at a p\-value 
threshold. This p\-value expresses the probability of a peak being significantly 
assigned to a set of close regulated genes as compared to the total number of 
genes present in the area specified by the span parameter. Please see the 
article above for further details. There can be multiple outputs, all of them 
containing the gene-peak associations in different formats which are described 
in the parameters below. The hypergeometric method is \s-1NOT\s0 verified and there are
other methods out there that may perform better. Again, use at your own risk. 
The tools works very nicely to calculate peak-gene distances with a set of very 
nice and informative outputs.
.PP
.Vb 12
\&    use HTS::Tools::Assign;
\&    my %params = (
\&        \*(Aqinput\*(Aq => [\*(Aqnormal_nfkb_peaks.txt\*(Aq,\*(Aqcancer_nfkb_peaks.txt\*(Aq]
\&        \*(Aqregion\*(Aq => \*(Aqmy_experiment_de_genes.txt\*(Aq,
\&        \*(Aqspan\*(Aq => [\-10000,1000],
\&        \*(Aqidstrand\*(Aq => [4 6],
\&        \*(Aqidmode\*(Aq => [4 5],
\&        \*(Aqoutformat\*(Aq => [\*(Aqpretty\-peak\*(Aq,\*(Aqgff\-gene\*(Aq,\*(Aqgene\-peak\-presence\*(Aq,
\&            \*(Aqgene\-peak\-number\*(Aq]
\&    )
\&    my $assigner = HTS::Tools::Assign\->new(\e%params);
\&    $assigner\->run;
.Ve
.PP
The acceptable parameters are as follows:
.IP "\fIinput\fR \fB(required)\fR" 4
.IX Item "input (required)"
A set of input BED-like file(s) to be used as query regions. Each should 
containing a column with a \s-1UNIQUE\s0 region \s-1ID\s0 and a column with the region mode 
(e.g. peak summit, the point with the highest tag pile-up) or a location that 
the user thinks as the point of the region from which the distance to the genes 
will be calculated. If there is no such point, the center of the region may be 
used (see \fIidmode\fR) parameter below
.IP "\fIregion\fR \fB(required)\fR" 4
.IX Item "region (required)"
A BED-like file with the set of subject regions (e.g. a set of regulated genes),
containing a column with a  \s-1UNIQUE\s0 gene (or whatever region) \s-1ID\s0 and a column 
with the gene strand. Alternatively, the \fIregion\fR parameter can be one of the 
following keywords for a set of predefined region templates, which will be 
automatically downloaded from the source defined by the \fIsource\fR parameter:
.Sp
\&\*(L"human-gene\*(R" for homo sapiens gene co-ordinates
\&\*(L"human-exon\*(R" for homo sapiens exon co-ordinates
\&\*(L"human\-5utr\*(R" for homo sapiens 5'\s-1UTR\s0 co-ordinates
\&\*(L"human\-3utr\*(R" for homo sapiens 3'\s-1UTR\s0 co-ordinates
\&\*(L"human-cds\*(R" for homo sapiens \s-1CDS\s0 co-ordinates
\&\*(L"mouse-gene\*(R" for mus musculus gene co-ordinates
\&\*(L"mouse-exon\*(R" for mus musculus exon co-ordinates
\&\*(L"mouse\-5utr\*(R" for mus musculus 5'\s-1UTR\s0 co-ordinates
\&\*(L"mouse\-3utr\*(R" for mus musculus 3'\s-1UTR\s0 co-ordinates
\&\*(L"mouse-cds\*(R" for mus musculus \s-1CDS\s0 co-ordinates
\&\*(L"rat-gene\*(R" for rattus norvegicus gene co-ordinates
\&\*(L"rat-exon\*(R" for rattus norvegicus exon co-ordinates
\&\*(L"rat\-5utr\*(R" for rattus norvegicus 5'\s-1UTR\s0 co-ordinates
\&\*(L"rat\-3utr\*(R" for rattus norvegicus 3'\s-1UTR\s0 co-ordinates
\&\*(L"rat-cds\*(R" for rattus norvegicus \s-1CDS\s0 co-ordinates
\&\*(L"fly-gene\*(R" for drosophila melanogaster gene co-ordinates
\&\*(L"fly-exon\*(R" for drosophila melanogaster exon co-ordinates
\&\*(L"fly\-5utr\*(R" for drosophila melanogaster 5'\s-1UTR\s0 co-ordinates
\&\*(L"fly\-3utr\*(R" for drosophila melanogaster 3'\s-1UTR\s0 co-ordinates
\&\*(L"fly-cds\*(R" for drosophila melanogaster \s-1CDS\s0 co-ordinates
\&\*(L"zebrafish-gene\*(R" for danio rerio gene co-ordinates
\&\*(L"zebrafish-exon\*(R" for danio rerio exon co-ordinates
\&\*(L"zebrafish\-5utr\*(R" for danio rerio 5'\s-1UTR\s0 co-ordinates
\&\*(L"zebrafish\-3utr\*(R" for danio rerio 3'\s-1UTR\s0 co-ordinates
\&\*(L"zebrafish-cds\*(R" for danio rerio \s-1CDS\s0 co-ordinates
.IP "\fIbackground\fR \fB(optional)\fR" 4
.IX Item "background (optional)"
A \s-1BED\s0 file with the set of background regions (e.g. a set of regulated genes), 
containing a column with a \s-1UNIQUE\s0 gene (or whatever region) \s-1ID\s0 and a column with
the gene strand. Alternatively, the \fIregion\fR parameter can be one of the 
following keywords for a set of predefined region templates (this file is used 
only for the statistical test described above). For these templates, see the 
\&\fIregion\fR parameter above.
.IP "\fIsource\fR \fB(optional)\fR" 4
.IX Item "source (optional)"
Use this option to set the online data source in the case of selecting one of 
the predefined region templates with \fIregion\fR. It can be one of \*(L"ucsc\*(R", 
\&\*(L"refseq\*(R" or \*(L"ensembl\*(R" and Default to \*(L"ensembl\*(R".
.IP "\fIsplicing\fR \fB(optional)\fR" 4
.IX Item "splicing (optional)"
Use this option with \fIsource\fR to determine whether the canonical or 
alternatively spliced transcripts will be used for counting. It can be 
\&\*(L"canonical\*(R" or \*(L"alternative\*(R" and defaults to \*(L"canonical\*(R"
.IP "\fIspan\fR \fB(optional)\fR" 4
.IX Item "span (optional)"
Use this parameter to set the genomic span (distance upstream and downstream 
from the fixed point of the subject regions) into which the module will look for
any queries. It should consist of an array of two values (e.g. [\-10000,1000]) 
and defaults to [\-10000,10000].
.IP "\fIwhere\fR \fB(optional)\fR" 4
.IX Item "where (optional)"
Use this parameter to tell Assign.pm whether to check for query regions. When 
\&\*(L"promoter\*(R", it will check for queries upstream and downstream of subjects
according to \fIspan\fR. If \*(L"coding\*(R", the second \fIspan\fR argument is ignored and
it automatically becomes subject_end \- subject_start + span_1 to check for
queries inside the subject regions. If \*(L"downtes\*(R", the second \fIspan\fR argument is 
ignored and it automatically becomes subject_end + span_1 to check for presence
e.g. downstream of transcriptional end sites. The option names \*(L"promoter\*(R",
\&\*(L"coding\*(R" and \*(L"downtes\*(R" are indicative. Queries and subjects can be any genomic 
regions of interest.
.IP "\fIidstrand\fR \fB(optional)\fR" 4
.IX Item "idstrand (optional)"
The columns in both the subject and the background (if used) file(s) where their
unique IDs and strands are. You should provide an array of two values 
(e.g. [4,5]) where the first denotes the unique \s-1ID\s0 column and the second the 
strand column. It defaults to [4,5].
.IP "\fIexpression\fR \fB(optional)\fR" 4
.IX Item "expression (optional)"
The columns in the subject file where there are optional expression values,
for example if the subject file is a set of expressed genes. You should provide 
an array of values (e.g. [7,8,9]) that denote the column number where the 
expression values are stored.
.IP "\fIidmode\fR \fB(optional)\fR" 4
.IX Item "idmode (optional)"
The columns in the query files where their unique IDs and possibly modes are. 
You should provide at least two values (e.g \fIidmode\fR [4,5]) where the first 
denotes the unique \s-1ID\s0 column and the second the mode column. If the second value
is not provided, the module assumes that the center of each query region is its 
mode. It defaults to [4]. Optionally, you can provide three values, where the 
3rd represents a peak score if available. This will be reported when using the 
\&\*(L"matrix-peak\*(R" output. The values must be provided strictly with the following 
order: id column, mode column, score column.
.IP "\fItest\fR \fB(optional)\fR" 4
.IX Item "test (optional)"
What over-representation statistical test to perform. Can be one of hypgeom for 
hypergeometric test, chi2 for chi-square test, auto for automatic selection and 
none for no testing. Defaults to none.
.IP "\fIpvalue\fR \fB(optional)\fR" 4
.IX Item "pvalue (optional)"
The statistical test p\-value threshold. It defaults to 0.05.
.IP "\fIredundancy\fR \fB(optional)\fR" 4
.IX Item "redundancy (optional)"
The reundancy level when assigning peaks (queries) to genes (subjects). It can 
be \*(L"genecentric\*(R" for assigning multiple peaks to one gene, \*(L"peakcentric\*(R" to 
allow one peak to many genes or \*(L"all\*(R" to allow a multi-to-multi assignment 
(default). The option \*(L"peakcentric\*(R" is not yet implemented.
.IP "\fIoutformat\fR  \fB(optional)\fR" 4
.IX Item "outformat (optional)"
Use this parameter to determine which output format filetype(s) you wish to 
retrieve. Possible choices are:
\&\*(L"stats\*(R" for retrieving the significantly associated peaks with their p\-values, 
Bonferroni corrected p\-values and enrichment ratios.
\&\*(L"gff-peak\*(R" for retrieving a peak-based gff file which contains additional 
columns with peak ids, distances and enrichment ratios. The score column is the 
p\-value.
\&\*(L"gff-gene\*(R" for similar to \*(L"gff-peak\*(R" but gene-based.
\&\*(L"gff-peak-db\*(R" for same as \*(L"gff-peak\*(R" but with a header, suitable for 
incorporating to a database.
\&\*(L"gff-gene-db\*(R" for same as \*(L"gff-gene\*(R" but with a header, suitable for 
incorporating to a database.
\&\*(L"peak\*(R" for a simple file which contains the significantly associated peak IDs in
the first column and a list of associated genes in the second column.
\&\*(L"gene\*(R" for similar to \*(L"peak\*(R" but gene based.
\&\*(L"all-peak\*(R" for a simple file which contains \s-1ALL \s0(based on distance) associated 
peak IDs in the first column and a list of associated genes in the second column.
\&\*(L"all-gene\*(R" for similar to \*(L"all-peak\*(R" but gene based.
\&\*(L"pretty-peak\*(R" for retrieving a more human-readable format quite self-explicating
(please see output).
\&\*(L"pretty-gene\*(R" similar to \*(L"pretty-peak\*(R" but gene-based (please see output).
\&\*(L"peakdata\*(R" for retrieving only the assigned peaks from the original peak file.
\&\*(L"bed\*(R" for retrieving a 6\-column \s-1BED\s0 file suitable for a genome browser without 
additional data.
\&\*(L"matrix-number\*(R" to retrieve a spreadsheet-like file where rows correspond to the
subject region file and columns correspond to query files. The cell (i,j) 
contains the number of regions in query file j assigned to subject region i.
\&\*(L"matrix-presence\*(R" to retrieve a spreadsheet-like file where rows correspond to 
the subject region file and columns correspond to peak files. The cell (i,j) 
contains \*(L"+\*(R" if region in query file j assigned to subjecy region i, or\*(L"\-\*(R" 
otherwise.
\&\*(L"matrix-peaks\*(R" to retrieve a spreadsheet-like file where rows correspond to 
subject region file and columns correspond to query region files. The cell (i,j)
contains the regions in query file j assigned to subject region i, or \*(L"\s-1NP\*(R" \s0
otherwise.
.IP "\fIsilent\fR \fB(optional)\fR" 4
.IX Item "silent (optional)"
Use this parameter if you want to turn informative messages off.
.SH "OUTPUT"
.IX Header "OUTPUT"
The main output of the program is up to twelve files with information on 
gene-peak (or more generally, region-region) association.
.SH "SUBROUTINES/METHODS"
.IX Header "SUBROUTINES/METHODS"
.SS "new"
.IX Subsection "new"
The HTS::Tools::Assign object constructor. It accepts a set of parameters that 
are required to run the asigner and get the output.
.PP
.Vb 2
\&    my $assigner = HTS::Tools::Assign\->new({\*(Aqinput\*(Aq => \*(Aqmy_peaks.txt\*(Aq,
\&        \*(Aqregion\*(Aq => \*(Aqmy_genome.txt\*(Aq});
.Ve
.SS "init"
.IX Subsection "init"
HTS::Tools::Assign object initialization method. \s-1NEVER\s0 use this directly, use 
new instead.
.SS "run"
.IX Subsection "run"
The HTS::Tools::Assign run subroutine. It runs the assigner with the given 
parameters in the constructor.
.PP
.Vb 1
\&    $assigner\->run;
.Ve
.SS "hypergeom_pdf"
.IX Subsection "hypergeom_pdf"
Hypergeometric probabilty density function (pdf). There are m \*(L"bad\*(R" and n \*(L"good\*(R" balls in an urn.
Pick N of them. The probability of i or more successful selections is: 
(m!n!N!(m+n\-N)!)/(i!(n\-i)!(m+i\-N)!(N\-i)!(m+n)!)
This function is used to perform the hypergeometric test to decide if a genomic region is significantly
\&\*(L"close\*(R" to another functional region, depending on the functional regions in the background. This is very
experimental and should not be used until explicitly said in a module update.
.PP
.Vb 1
\&    $assigner\->hypergeom_pdf($n,$m,$N,$i)
.Ve
.SS "hypergeom_pdf"
.IX Subsection "hypergeom_pdf"
Hypergeometric cumulative distribution function (cdf). This function is used to perform the hypergeometric 
test to decide if a genomic region is significantly \*(L"close\*(R" to another functional region, depending on 
the functional regions in the background. This is very experimental and should not be used until explicitly 
said in a module update.
.PP
.Vb 1
\&    $assigner\->hypergeom_cdf($n,$m,$N,$i)
.Ve
.SS "logfact"
.IX Subsection "logfact"
Helper function to calculate a hypergeometric test p\-value. Efficiently calculates factorial. Internal
use.
.SS "gammaln"
.IX Subsection "gammaln"
Helper function to calculate a hypergeometric test p\-value. Efficiently calculates factorial. Internal
use.
.SS "dist"
.IX Subsection "dist"
Distance calculation function among regions, given starting and ending points. Internal use.
.PP
.Vb 1
\&    $assigner\->dist($start,$end,$anchor)
.Ve
.SS "chisquarecont"
.IX Subsection "chisquarecont"
Chi-square contingency table and test.Internal use but may be used also from outside to perform a
chi-square test, given the contingency table (a,b,c,d). The package Math::Cephes is required but this
is checked during module initialization.
.PP
.Vb 1
\&    $assigner\->chisquarecont($a,$b,$c,$d)
.Ve
.SS "print_gene_or_peak"
.IX Subsection "print_gene_or_peak"
Internal output printing function
.PP
.Vb 1
\&    $assigner\->print_gene_or_peak($input,$outformat,%resulthash)
.Ve
.SS "print_matrix"
.IX Subsection "print_matrix"
Internal output printing function
.PP
.Vb 1
\&    $assigner\->print_matrix($resulthash,$outformat)
.Ve
.SS "create_output_file"
.IX Subsection "create_output_file"
Automatic output filename creation for the module outputs. Internal use.
.PP
.Vb 1
\&    $assigner\->create_output_file($input,$outformat)
.Ve
.SS "check_unique"
.IX Subsection "check_unique"
Check uniqueness of hash values. Required for internal control. Internal use.
.PP
.Vb 1
\&    $assigner\->check_unique(%hash)
.Ve
.SS "change_params"
.IX Subsection "change_params"
Massively change the parameters of an HTS::Tools::Assign object.
.PP
.Vb 2
\&    $assigner\->change_params({\*(Aqinput\*(Aq => \*(Aqanother_file\*(Aq,\*(Aqregion\*(Aq => \*(Aqmouse\-exon\*(Aq})
\&    $assigner\->run;
.Ve
.SS "get"
.IX Subsection "get"
HTS::Tools::Assign object getter
.PP
.Vb 1
\&    my $param_value = $assigner\->get("param_name")
.Ve
.SS "set"
.IX Subsection "set"
HTS::Tools::Assign object setter
.PP
.Vb 1
\&    $assigner\->set("param_name","param_value")
.Ve
.SH "DEPENDENCIES"
.IX Header "DEPENDENCIES"
Tie::IxHash::Easy (optional)
Math::Cephes (optional)
.PP
= head1 \s-1TODO\s0
.SH "AUTHOR"
.IX Header "AUTHOR"
Panagiotis Moulos, \f(CW\*(C`<moulos at fleming.gr>\*(C'\fR
.SH "BUGS"
.IX Header "BUGS"
Please report any bugs or feature requests to \f(CW\*(C`bug\-hts\-tools at rt.cpan.org\*(C'\fR, or through
the web interface at <http://rt.cpan.org/NoAuth/ReportBug.html?Queue=HTS\-Tools>.  I will be notified, and then you'll
automatically be notified of progress on your bug as I make changes.
.SH "SUPPORT"
.IX Header "SUPPORT"
You can find documentation for this module with the perldoc command.
.PP
.Vb 1
\&    perldoc HTS::Tools::Assign
.Ve
.PP
You can also look for information at:
.IP "\(bu" 4
\&\s-1RT: CPAN\s0's request tracker (report bugs here)
.Sp
<http://rt.cpan.org/NoAuth/Bugs.html?Dist=HTS\-Tools>
.IP "\(bu" 4
AnnoCPAN: Annotated \s-1CPAN\s0 documentation
.Sp
<http://annocpan.org/dist/HTS\-Tools>
.IP "\(bu" 4
\&\s-1CPAN\s0 Ratings
.Sp
<http://cpanratings.perl.org/d/HTS\-Tools>
.IP "\(bu" 4
Search \s-1CPAN\s0
.Sp
<http://search.cpan.org/dist/HTS\-Tools/>
.SH "ACKNOWLEDGEMENTS"
.IX Header "ACKNOWLEDGEMENTS"
.SH "LICENSE AND COPYRIGHT"
.IX Header "LICENSE AND COPYRIGHT"
Copyright 2013 Panagiotis Moulos.
.PP
This program is free software; you can redistribute it and/or modify it
under the terms of the the Artistic License (2.0). You may obtain a
copy of the full license at:
.PP
<http://www.perlfoundation.org/artistic_license_2_0>
.PP
Any use, modification, and distribution of the Standard or Modified
Versions is governed by this Artistic License. By using, modifying or
distributing the Package, you accept this license. Do not use, modify,
or distribute the Package, if you do not accept this license.
.PP
If your Modified Version has been derived from a Modified Version made
by someone other than you, you are nevertheless required to ensure that
your Modified Version complies with the requirements of this license.
.PP
This license does not grant you the right to use any trademark, service
mark, tradename, or logo of the Copyright Holder.
.PP
This license includes the non-exclusive, worldwide, free-of-charge
patent license to make, have made, use, offer to sell, sell, import and
otherwise transfer the Package with respect to any patent claims
licensable by the Copyright Holder that are necessarily infringed by the
Package. If you institute patent litigation (including a cross-claim or
counterclaim) against any party alleging that the Package constitutes
direct or contributory patent infringement, then this Artistic License
to you shall terminate on the date that such litigation is filed.
.PP
Disclaimer of Warranty: \s-1THE PACKAGE IS PROVIDED BY THE COPYRIGHT HOLDER
AND CONTRIBUTORS "AS IS\s0' \s-1AND WITHOUT ANY EXPRESS OR IMPLIED WARRANTIES.
THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
PURPOSE, OR\s0 NON-INFRINGEMENT \s-1ARE DISCLAIMED TO THE EXTENT PERMITTED BY
YOUR LOCAL LAW. UNLESS REQUIRED BY LAW, NO COPYRIGHT HOLDER OR
CONTRIBUTOR WILL BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, OR
CONSEQUENTIAL DAMAGES ARISING IN ANY WAY OUT OF THE USE OF THE PACKAGE,
EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\s0
.SH "POD ERRORS"
.IX Header "POD ERRORS"
Hey! \fBThe above document had some coding errors, which are explained below:\fR
.IP "Around line 221:" 4
.IX Item "Around line 221:"
You forgot a '=back' before '=head1'
